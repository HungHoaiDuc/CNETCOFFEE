package com.example.cnetcoffee.Controller.socket;

import com.example.cnetcoffee.Model.Session;
import com.example.cnetcoffee.Model.User;
import com.example.cnetcoffee.dao.ComputerDB;
import com.example.cnetcoffee.dao.SessionDAO;
import com.example.cnetcoffee.dao.UserDB;
import com.example.cnetcoffee.utils.SessionManager;
import com.example.cnetcoffee.utils.StageManager;
import javafx.application.Platform;
import javafx.stage.Stage;

import java.io.*;
import java.net.ServerSocket;
import java.net.Socket;

public class ClientSocketHandler {

    public static boolean sendCommand(String command) {
        try (Socket socket = new Socket("192.168.1.30", 12346);
             PrintWriter writer = new PrintWriter(socket.getOutputStream(), true);
             BufferedReader reader = new BufferedReader(new InputStreamReader(socket.getInputStream()))) {

            writer.println(command); // G·ª≠i l·ªánh ƒë·∫øn server
            String response = reader.readLine(); // ƒê·ªçc ph·∫£n h·ªìi t·ª´ server

            if ("STATUS_OK".equalsIgnoreCase(response) || "SUCCESS".equalsIgnoreCase(response)) {
                return true; // Server ph·∫£n h·ªìi th√†nh c√¥ng
            } else {
                System.out.println("Ph·∫£n h·ªìi t·ª´ server: " + response);
                return false; // Server ph·∫£n h·ªìi l·ªói
            }
        } catch (IOException e) {
            System.out.println("Kh√¥ng th·ªÉ k·∫øt n·ªëi ƒë·∫øn server: " + e.getMessage());
            return false; // K·∫øt n·ªëi th·∫•t b·∫°i
        }
    }

    public static void startListeningFromAdmin() {
        new Thread(() -> {
            try (ServerSocket serverSocket = new ServerSocket(13000)) {
                System.out.println("üü¢ User ƒëang l·∫Øng nghe Admin tr√™n c·ªïng 13000");

                while (true) {
                    Socket socket = serverSocket.accept();
                    BufferedReader in = new BufferedReader(new InputStreamReader(socket.getInputStream()));
                    String command = in.readLine();

                    int computerId = SessionManager.getAssignedComputerId();

                    if (command != null) {
                        if (command.equalsIgnoreCase("TURN_ON " + computerId)) {
                            System.out.println("‚ö° TURN_ON t·ª´ Admin");
                            Platform.runLater(() -> {
                                if (SessionManager.getCurrentUser() == null) {
                                    SessionManager.setGuestMode(true);

                                    int guestUserId = UserDB.getGuestUserId();
                                    UserDB userDB = new UserDB();
                                    User guestUser = userDB.getUserById(guestUserId);

                                    if (guestUser != null) {
                                        SessionManager.setCurrentUser(guestUser); // ‚úÖ C·∫ßn d√≤ng n√†y ƒë·ªÉ Chat ho·∫°t ƒë·ªông
                                        System.out.println("üë§ ƒê√£ g√°n guest_user v√†o SessionManager.");
                                    } else {
                                        System.out.println("‚ùå Kh√¥ng l·∫•y ƒë∆∞·ª£c guest_user t·ª´ DB!");
                                    }

                                    SessionDAO sessionDAO = new SessionDAO();
                                    Session session = sessionDAO.getActiveSessionByUserAndComputer(guestUserId, computerId);
                                    if (session != null) {
                                        SessionManager.setCurrentSessionId(session.getSessionId());
                                        SessionManager.setCurrentSession(session);
                                        System.out.println("ƒê√£ set sessionId cho guest: " + session.getSessionId());
                                    } else {
                                        System.out.println("‚ùå Kh√¥ng t√¨m th·∫•y session ACTIVE cho guest_user v√† m√°y n√†y!");
                                    }

                                    StageManager.switchHomeUser(
                                            "/com/example/cnetcoffee/user/home_user.fxml",
                                            "User Dashboard",
                                            false,
                                            410, 682,
                                            true
                                    );
                                } else {
                                    System.out.println("‚ö†Ô∏è ƒê√£ c√≥ user ƒëƒÉng nh·∫≠p, b·ªè qua TURN_ON cho kh√°ch v√£ng lai.");
                                }
                            });
                        }
                        else if (command.equalsIgnoreCase("TURN_OFF " + computerId)) {
                            System.out.println("üîå TURN_OFF t·ª´ Admin");
                            ComputerDB.updateComputerStatus(computerId, "READY", true);

                            // K·∫æT TH√öC PHI√äN L√ÄM VI·ªÜC (C·∫¨P NH·∫¨T SESSION) CHO C·∫¢ KH√ÅCH V√ÉNG LAI V√Ä USER TH·∫¨T
                            int sessionId = SessionManager.getCurrentSessionId();
                            System.out.println("SessionId khi t·∫Øt m√°y: " + sessionId);
                            if (sessionId > 0) {
                                SessionDAO sessionDAO = new SessionDAO();
                                sessionDAO.endSession(sessionId);
                                System.out.println("‚úÖ ƒê√£ c·∫≠p nh·∫≠t end_time cho session " + sessionId);
                            }

                            Platform.runLater(() -> {
                                Stage stage = StageManager.getPrimaryStage();
                                stage.setMinWidth(0);
                                stage.setMinHeight(0);
                                stage.setMaxWidth(Double.MAX_VALUE);
                                stage.setMaxHeight(Double.MAX_VALUE);

                                // Reset tr·∫°ng th√°i khi t·∫Øt m√°y
                                SessionManager.reset();

                                StageManager.switchSceneLoginUser(
                                        "/com/example/cnetcoffee/user/login_user.fxml",
                                        "C-NETCOFFEE!",
                                        false,
                                        "/img/LOGOC.png"
                                );
                            });
                        }

                    }
                    socket.close();
                }
            } catch (IOException e) {
                System.out.println("‚ùå L·ªói khi l·∫Øng nghe Admin: " + e.getMessage());
            }
        }).start();
    }

}
